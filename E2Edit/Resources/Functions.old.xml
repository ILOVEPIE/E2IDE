<?xml version="1.0" encoding="UTF-8"?>
<FunctionList>

  <Function Name="npcStop">
    <Arguments>e:</Arguments>
    <Return></Return>
    <Description><![CDATA[Stops any anything the NPC is doing, including things it decided to do by itself]]></Description>
  </Function>

  <Function Name="gResetGroup">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ang">
    <Arguments>nnn</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Makes an angle]]></Description>
  </Function>

  <Function Name="random">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns a random floating-point number between 0 and the specified value [0 <= x < a ]]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>qn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments></Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[Creates a 4x4 zero matrix]]></Description>
  </Function>

  <Function Name="stoptimer">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Stops a timer, can stop interval with stoptimer("interval")]]></Description>
  </Function>

  <Function Name="e">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns Euler's Constant]]></Description>
  </Function>

  <Function Name="cosh">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the hyperbolic cosine of C]]></Description>
  </Function>

  <Function Name="egpElements">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="length">
    <Arguments>xv2:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isOnFire">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity on fire?]]></Description>
  </Function>

  <Function Name="egpAngle">
    <Arguments>xwl:nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="length">
    <Arguments>xv4:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>b</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="popAngle">
    <Arguments>r:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>xwlxwl</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Rounds PYR up to the nearest integer]]></Description>
  </Function>

  <Function Name="massCenterL">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns Bs Center of Mass in local coordinates]]></Description>
  </Function>

  <Function Name="getConstraints">
    <Arguments>e:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Returns an array with all entities directly or indirectly constrained to E, except E itself.]]></Description>
  </Function>

  <Function Name="pewDamage">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpMaterialFromScreen">
    <Arguments>xwl:ne</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>nc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec">
    <Arguments>q</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Converts Q to a vector by dropping the real component]]></Description>
  </Function>

  <Function Name="clear">
    <Arguments>r:</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teamColor">
    <Arguments>n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the color of the team associated with the team number]]></Description>
  </Function>

  <Function Name="matrix2">
    <Arguments>nnnn</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[Creates a matrix with values in order (i.j) of: (1,1), (1,2), (2,1), (2,2)]]></Description>
  </Function>

  <Function Name="distance2">
    <Arguments>xv4:xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="owner">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Gets the owner of an entity]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>a:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Gets the angle nicely formatted as a string "[P,Y,R]"]]></Description>
  </Function>

  <Function Name="read">
    <Arguments>n:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerAngleHull">
    <Arguments>nnnvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="row">
    <Arguments>m:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the row as a vector]]></Description>
  </Function>

  <Function Name="setDiagonal">
    <Arguments>m:v</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Sets the elements of the leading diagonal from the components of a vector]]></Description>
  </Function>

  <Function Name="keyAttack2">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player pressing their secondary fire key?]]></Description>
  </Function>

  <Function Name="holoMaterial">
    <Arguments>ns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:geq">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>n=rn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>c:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[The same as toString(C).]]></Description>
  </Function>

  <Function Name="gGetEnt">
    <Arguments>n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>xrd</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetGroup">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets the group that all global write, read, and delete functions will use, default is "default"]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Rounds XYZ down to argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalClk">
    <Arguments>ss</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>xv4n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="glonDecode">
    <Arguments>s</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Decodes S into an array, using GLON.]]></Description>
  </Function>

  <Function Name="holoRemainingSpawns">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm2=xwls</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ping">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the latency for player E]]></Description>
  </Function>

  <Function Name="holoCreate">
    <Arguments>nvvav</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Index, Position, Scale, Angle, Color (RGB)\nCreates a new hologram entity]]></Description>
  </Function>

  <Function Name="z">
    <Arguments>xm4:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="w">
    <Arguments>xv4:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpTextLayout">
    <Arguments>xwl:nsnnnnnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isWorld">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity the world?]]></Description>
  </Function>

  <Function Name="adj">
    <Arguments>m</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Returns the adjugate of a matrix (Does not work for 4x4 matrices)]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnvv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setYaw">
    <Arguments>a:n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns a copy of the angle with Yaw replaced (use as Ang = Ang:setYaw(...)) ]]></Description>
  </Function>

  <Function Name="comp">
    <Arguments>n</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Converts a real number to complex (returns complex number with real part N and imaginary part 0)]]></Description>
  </Function>

  <Function Name="tan">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the tangent of C]]></Description>
  </Function>

  <Function Name="holoCreate">
    <Arguments>nv</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Index, Position\nCreates a new hologram entity]]></Description>
  </Function>

  <Function Name="npcRelationshipByOwner">
    <Arguments>e:esn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[ Sets the NPC's relationship to all currently existing NPCs owned by player E. Returns number of entities added to relationships.]]></Description>
  </Function>

  <Function Name="findIncludePlayerProps">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Include entities owned by this player from future finds, and remove others not in the whitelist]]></Description>
  </Function>

  <Function Name="isSinglePlayer">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if singleplayer, 0 if multiplayer]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="max">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="systime">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xwl=ts</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm4=xwls</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sign">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the sign of argument (-1,0,1) [sign(N) = N / abs(N) ]]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>nc</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewDamageRadius">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="parent">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the entity E is parented to.]]></Description>
  </Function>

  <Function Name="right">
    <Arguments>a:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the right vector of the angle.]]></Description>
  </Function>

  <Function Name="bone">
    <Arguments>xwl:s</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removeVector">
    <Arguments>r:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setX">
    <Arguments>xv4:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>q=xwls</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nn...</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=xwlns</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetAng">
    <Arguments></Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vel">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the velocity of the entity]]></Description>
  </Function>

  <Function Name="egpBoxoutline">
    <Arguments>xwl:nnnnnnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="x">
    <Arguments>v:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the x component of the vector]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>qn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="popEntity">
    <Arguments>r:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertMatrix">
    <Arguments>r:nm</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>nq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setBone">
    <Arguments>xwl:sb</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="clip1">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the amount of ammo in the primary clip of weapon E, -1 if there is no primary clip]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>xv2xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mod">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>sv</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>c=ts</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>nc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Rounds PYR to the nearest integer]]></Description>
  </Function>

  <Function Name="cscr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the cosecant of N radians]]></Description>
  </Function>

  <Function Name="isPlayer">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity a player?]]></Description>
  </Function>

  <Function Name="setColumn">
    <Arguments>xm2:nnn</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="index">
    <Arguments>b:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns Bs index in the entity it belongs to. Returns -1 if the bone is invalid or an error occured]]></Description>
  </Function>

  <Function Name="findClipToRegion">
    <Arguments>vv</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angVel">
    <Arguments>e:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Gets the angular velocity of the entity]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>xm4n</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sechr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>e=rne</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findIncludeEntities">
    <Arguments>r</Arguments>
    <Return></Return>
    <Description><![CDATA[Include all entities from R in future finds, and remove others not in the whitelist]]></Description>
  </Function>

  <Function Name="last">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if it is being called on the last execution of the expression gate before it is removed or reset. This execution must be requested with the runOnLast(1) command.]]></Description>
  </Function>

  <Function Name="bone">
    <Arguments>xrd:</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="time">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns numerical time/date info from the server. Possible arguments: "year", "month", "day", "hour", "min", "sec", "wday" (weekday, Sunday is 1), "yday" (day of the year), and "isdst" (daylight saving flag 0/1)]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>n=rnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpBox">
    <Arguments>xwl:nxv2xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments>vv</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="right">
    <Arguments>q:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns vector pointing right for Q]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm4=xwlsxm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="row">
    <Arguments>xm4:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>xm4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoClip">
    <Arguments>nvvn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="clone">
    <Arguments>r:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoScale">
    <Arguments>nv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:trg">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="minVec">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setColumn">
    <Arguments>xm2:nxv2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="min">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findInBox">
    <Arguments>vv</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Like findInSphere but with a globally aligned box, the arguments are the diagonal corners of the box]]></Description>
  </Function>

  <Function Name="shiftNumber">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>vnn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a vector in the same direction as vector 1, with length clamped between argument 2(min) and argument 3(max)]]></Description>
  </Function>

  <Function Name="string">
    <Arguments>xwl:s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>t</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClearWhiteModelList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the model whitelist]]></Description>
  </Function>

  <Function Name="isPlayerHolding">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity being held by a player?]]></Description>
  </Function>

  <Function Name="setString">
    <Arguments>xwl:ss</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpSize">
    <Arguments>xwl:nxv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="convarnum">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Give a console command such as "sbox_godmode" and it returns the set value]]></Description>
  </Function>

  <Function Name="angles">
    <Arguments>e:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Gets the pitch, yaw and roll of the entity]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>b=tsb</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setVector2">
    <Arguments>t:sxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClipFromClass">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities that are of this class]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>e=xwlse</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv4=rnxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="remove">
    <Arguments>r:n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toNumber">
    <Arguments>s:n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Parses a number from a string. The argument given is the base. I.e. toNumber(16) will parse hex.]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="passenger">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the passenger of the vehicle if there is one, in single seat pods this will return the driver.]]></Description>
  </Function>

  <Function Name="velL">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns Bs velocity in local coordinates]]></Description>
  </Function>

  <Function Name="pewBulletName">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>v:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Gets the vector nicely formatted as a string "[X,Y,Z]"]]></Description>
  </Function>

  <Function Name="npcShoot">
    <Arguments>e:</Arguments>
    <Return></Return>
    <Description><![CDATA[ Tells the NPC to shoot their gun]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>qv</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertVector2">
    <Arguments>r:nxv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetNum">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="runOnTick">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[If set to 1, the expression will execute once every game tick. See Admin#Tick and http://whisper.ausgamers.com/wiki/index.php/Tickrate For more information on how often this is run.]]></Description>
  </Function>

  <Function Name="distance">
    <Arguments>v:v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the distance between vectors]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv2=xwlsxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertVector">
    <Arguments>r:nv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteNum">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>cc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="fileListLoaded">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[If the list has been loaded and it is called, it will return 1. Any time after that until a new list is loaded it will return 0.]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>r:n</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Rounds XYZ up to the nearest integer]]></Description>
  </Function>

  <Function Name="egpSetText">
    <Arguments>xwl:ns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="tickClk">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the current execution was caused by "runOnTick"]]></Description>
  </Function>

  <Function Name="coth">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the hyperbolic cotangent of N]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>xv4</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isConstrainedTo">
    <Arguments>e:s</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the first entity E was constrained to with the given constraint type (see the types list below)]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>xm4xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerHull">
    <Arguments>nv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Inputs: Distance, Hull BoxSize]]></Description>
  </Function>

  <Function Name="gDeleteStr">
    <Arguments>s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="atan">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the inverse tangent of C]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>q=tsq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shiftMatrix">
    <Arguments>r:</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="peerport">
    <Arguments>n:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>cc</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shiftBone">
    <Arguments>r:</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="complex">
    <Arguments>t:s</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Rounds PYR down to the nearest integer]]></Description>
  </Function>

  <Function Name="vector4">
    <Arguments>r:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="randvec">
    <Arguments>nn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="bXor">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="minquota">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[The ops left before soft quota is used up]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>r=xwlsr</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerHull">
    <Arguments>nnnv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Inputs: Distance, X Skew, Y Skew, Hull BoxSize]]></Description>
  </Function>

  <Function Name="vec2">
    <Arguments>nn</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[Makes a 2D vector]]></Description>
  </Function>

  <Function Name="pewDPS">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ang">
    <Arguments>v</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Changes a vector variable into an angle variable]]></Description>
  </Function>

  <Function Name="findClearBlackClassList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the class blacklist]]></Description>
  </Function>

  <Function Name="setVector">
    <Arguments>t:sv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyTorque">
    <Arguments>e:v</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies torque according to the given vector, representing the torque axis, magnitude and direction]]></Description>
  </Function>

  <Function Name="name">
    <Arguments>n:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>t:s</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:geq">
    <Arguments>aa</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm4=rn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toLocal">
    <Arguments>e:v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Transforms from a world vector to a vector local to E.]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xwln</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toAngle">
    <Arguments>xv2:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftBone">
    <Arguments>r:b</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>na...</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="runOnSignal">
    <Arguments>snn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mix">
    <Arguments>xv4xv4n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>xm2xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vel">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns Bs velocity]]></Description>
  </Function>

  <Function Name="vec2">
    <Arguments></Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[Same as vec2(0,0)]]></Description>
  </Function>

  <Function Name="setPitch">
    <Arguments>a:n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns a copy of the angle with Pitch replaced (use as Ang = Ang:setPitch(...)) ]]></Description>
  </Function>

  <Function Name="holoDeleteAll">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundStop">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteEnt">
    <Arguments>n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ops">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns how many ops are used every execution on average]]></Description>
  </Function>

  <Function Name="op:dat">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerFlags">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets the ranger flags. S can be any combination of I=ignore world, W=hit water, E=hit entities and Z=default to zero.]]></Description>
  </Function>

  <Function Name="numPlayers">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the number of players currently in the server]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>r</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv2=tsxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec">
    <Arguments>a</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Changes an angle variable into a vector variable]]></Description>
  </Function>

  <Function Name="values">
    <Arguments>t:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="maxVec">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the vector combining the highest value components of V1 and V2]]></Description>
  </Function>

  <Function Name="pewCoreMaxHealth">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetAng">
    <Arguments>s</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="swapElements">
    <Arguments>m:nnnn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Swaps two elements, specified by indices ( i1, j1, i2, j2 )]]></Description>
  </Function>

  <Function Name="shiftR">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalSendToPlayer">
    <Arguments>se</Arguments>
    <Return></Return>
    <Description><![CDATA[sends signal S to chips owned by the given player, multiple calls for different players do not overwrite each other]]></Description>
  </Function>

  <Function Name="applyOffsetTorque">
    <Arguments>b:vv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angVel">
    <Arguments>b:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns Bs angular velocity]]></Description>
  </Function>

  <Function Name="toAngle">
    <Arguments>q:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns angle represented by Q]]></Description>
  </Function>

  <Function Name="printColor">
    <Arguments>...</Arguments>
    <Return></Return>
    <Description><![CDATA[Works like chat.AddText(...). Parameters can be any amount and combination of numbers, strings, player entities, color vectors (both 3D and 4D).]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments>b:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the entity B belongs to]]></Description>
  </Function>

  <Function Name="setVector4">
    <Arguments>r:nxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>aa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpColor">
    <Arguments>xwl:nnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteEnt">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findResult">
    <Arguments>n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the indexed entity from the previous find event (valid parameters are 1 to the number of entities found)]]></Description>
  </Function>

  <Function Name="nobone">
    <Arguments></Arguments>
    <Return>b</Return>
    <Description><![CDATA[Returns an invalid bone]]></Description>
  </Function>

  <Function Name="findClipToName">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities that do NOT have this name]]></Description>
  </Function>

  <Function Name="fileRemove">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Removes a file from the server so you can upload another file.]]></Description>
  </Function>

  <Function Name="shift">
    <Arguments>r:</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="roll">
    <Arguments>a:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the roll of the angle]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetVec">
    <Arguments>sv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMatrix">
    <Arguments>xwl:sm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="swapRows">
    <Arguments>xm2:</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pushComplex">
    <Arguments>r:c</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="glonDecodeTable">
    <Arguments>s</Arguments>
    <Return>t</Return>
    <Description><![CDATA[Decodes S into a table, using GLON.]]></Description>
  </Function>

  <Function Name="y">
    <Arguments>m:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the local y direction vector from a 3x3 coordinate reference frame matrix ( same as M:column(2) )]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nxwl...</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qi">
    <Arguments>n</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns quaternion N*i]]></Description>
  </Function>

  <Function Name="hsv2rgb">
    <Arguments>nnn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="adj">
    <Arguments>xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalSend">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[Sends signal S to scope N. Additional calls to this function with the same signal will overwrite the old call until the signal is issued.]]></Description>
  </Function>

  <Function Name="gGetAng">
    <Arguments>n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewRecoilForce">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>a</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Returns a 3x3 reference frame matrix as described by the angle A. Multiplying by this matrix will be the same as rotating by the given angle.]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>cn</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpDraw">
    <Arguments>xwl:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm4=tsxm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewSliceDistance">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="row">
    <Arguments>xm2:n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>e</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[Creates a 4x4 reference frame matrix from an entity's local direction vectors by columns in the order (x, y, z, pos), with the bottom row (0,0,0,1)]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>cc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>an</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoColor">
    <Arguments>nxv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sinh">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the hyperbolic sine of C]]></Description>
  </Function>

  <Function Name="length">
    <Arguments>s:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the length of the string.]]></Description>
  </Function>

  <Function Name="gDeleteAng">
    <Arguments></Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toByte">
    <Arguments>sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the ASCII code of the Nth character in the string]]></Description>
  </Function>

  <Function Name="asin">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the inverse sine of C]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>q</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Formats Q as a string.]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Rounds XYZ up to argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="trace">
    <Arguments>xm4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xwl=tsxwl</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>e</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpColor">
    <Arguments>xwl:nvn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewReloadTime">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:seq">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMass">
    <Arguments>b:n</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets Bs mass (between 0.001 and 50,000)]]></Description>
  </Function>

  <Function Name="printDriver">
    <Arguments>e:ns</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Same as EE:printDriver(S), but can make the text show up in different places. N can be one of the following: _HUD_PRINTCENTER, _HUD_PRINTCONSOLE, _HUD_PRINTNOTIFY, _HUD_PRINTTALK.]]></Description>
  </Function>

  <Function Name="findByName">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Find all entities with the given name]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nxv4...</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftEntity">
    <Arguments>r:e</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="peername">
    <Arguments>n:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMaterial">
    <Arguments>e:s</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="position">
    <Arguments>xrd:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="owner">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[Gets the owner of the expression ( same as entity():owner() )]]></Description>
  </Function>

  <Function Name="gGetVec">
    <Arguments>s</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>xm2xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isVehicle">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity a vehicle?]]></Description>
  </Function>

  <Function Name="setMatrix2">
    <Arguments>xwl:sxm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="bone">
    <Arguments>t:s</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>mn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="y">
    <Arguments>xv2:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="positive">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewDamageType">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="string">
    <Arguments>r:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="k">
    <Arguments>q:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the k component of the quaternion]]></Description>
  </Function>

  <Function Name="gSetVec">
    <Arguments>v</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>cn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>xv2n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:gth">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>m=xwls</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec4">
    <Arguments></Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[Same as vec4(0,0,0,0)]]></Description>
  </Function>

  <Function Name="swapColumns">
    <Arguments>m:nn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Swaps the two columns specified]]></Description>
  </Function>

  <Function Name="rangerFlags">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the ranger flags as a string.]]></Description>
  </Function>

  <Function Name="egpCircle">
    <Arguments>xwl:nxv2xv2vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="glonEncode">
    <Arguments>r</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Encodes R into a string, using GLON.]]></Description>
  </Function>

  <Function Name="matrix2">
    <Arguments>m</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[Converts a 3x3 matrix into a 2x2 matrix - all (i,3) and (3,j) are omitted]]></Description>
  </Function>

  <Function Name="concat">
    <Arguments>r:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMass">
    <Arguments>e:n</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets the mass of the entity (between 0.001 and 50,000)]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>xv4n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcGiveWeapon">
    <Arguments>e:</Arguments>
    <Return></Return>
    <Description><![CDATA[ Gives the NPC an SMG]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>xv2xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="log">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[ Returns the logarithm to base Argument 2 of Argument 1]]></Description>
  </Function>

  <Function Name="swapElements">
    <Arguments>xm2:nnnn</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cothr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="friends">
    <Arguments>e:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Returns an array of players on the prop protection friends list. ]]></Description>
  </Function>

  <Function Name="pos">
    <Arguments>xm4:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="accept">
    <Arguments>n:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>ann</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Clamps angle 1's PYR between argument 2(min) and argument 3(max)]]></Description>
  </Function>

  <Function Name="csch">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the hyperbolic cosecant of N ]]></Description>
  </Function>

  <Function Name="invert">
    <Arguments>t</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>m</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>ns</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="up">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the up direction of the entity]]></Description>
  </Function>

  <Function Name="exit">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Stops the execution of any code after it]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments>a</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Converts A to a quaternion]]></Description>
  </Function>

  <Function Name="boxCenter">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the center of the entity's bounding box, as a local position vector]]></Description>
  </Function>

  <Function Name="popNumber">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="attachmentAng">
    <Arguments>e:s</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="upper">
    <Arguments>s:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[All characters are made uppercase]]></Description>
  </Function>

  <Function Name="swapColumns">
    <Arguments>xm2:</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qRotation">
    <Arguments>v</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Construct a quaternion from the rotation vector V. Vector direction is axis of rotation, magnitude is angle in degress (by coder0xff)]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=xwls</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewHealth">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcRelationship">
    <Arguments>e:esn</Arguments>
    <Return></Return>
    <Description><![CDATA[Will set the NPC's relationship to the specified entity to the S input, priority N. Priority is any number between 0 and 999. The relationship string can be either "like" "neutral" "hate" or "fear". Same goes for all other relationship functions.]]></Description>
  </Function>

  <Function Name="int">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the Integer part of the Argument (same as floor)]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv4=tsxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="forward">
    <Arguments>a:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the forward vector of the angle.]]></Description>
  </Function>

  <Function Name="findAllowEntity">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove E from the blacklist]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>nxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="aimPos">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the point that the entity is looking at]]></Description>
  </Function>

  <Function Name="forward">
    <Arguments>q:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns vector pointing forward for Q]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClipToSphere">
    <Arguments>vn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities NOT within the specified sphere (center, radius)]]></Description>
  </Function>

  <Function Name="removeMatrix">
    <Arguments>r:n</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setRow">
    <Arguments>xm2:nxv2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findIncludeModel">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Include entities with this model (or partial model name) in future finds, and remove others not in the whitelist]]></Description>
  </Function>

  <Function Name="printColor">
    <Arguments>r</Arguments>
    <Return></Return>
    <Description><![CDATA[Like printColor(...), except taking an array containing all the parameters.]]></Description>
  </Function>

  <Function Name="mass">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the mass of the entity]]></Description>
  </Function>

  <Function Name="log2">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the logarithm of C to base 2]]></Description>
  </Function>

  <Function Name="setNumber">
    <Arguments>t:sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="convertUnit">
    <Arguments>ssn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Converts between two units]]></Description>
  </Function>

  <Function Name="fileLoad">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Loads the file from the client and sends it to server (You must wait at least 10 seconds before uploading to server and the file has to be under 100 kb).]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>ss</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>xm4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findExcludePlayerProps">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude entities owned by this player from future finds]]></Description>
  </Function>

  <Function Name="gDeleteStr">
    <Arguments>n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPolyColor">
    <Arguments>xwl:nxv4...</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pushAngle">
    <Arguments>r:a</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpCircle">
    <Arguments>xwl:nnnnnnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setZ">
    <Arguments>xv4:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundPurge">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>xm4n</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix2">
    <Arguments>xv2xv2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>xm2n</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="deaths">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the number of times the player died]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>e</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toWorld">
    <Arguments>e:v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Transforms from a vector local to E to a world vector.]]></Description>
  </Function>

  <Function Name="printTable">
    <Arguments>r</Arguments>
    <Return></Return>
    <Description><![CDATA[Prints an array like the lua function G.PrintTable|PrintTable does, except to the chat area.]]></Description>
  </Function>

  <Function Name="sub">
    <Arguments>s:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns a substring, starting at the number argument and ending at the end of the string]]></Description>
  </Function>

  <Function Name="model">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Gets the model of an entity]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>xwl:s</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pitch">
    <Arguments>a:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the pitch of the angle]]></Description>
  </Function>

  <Function Name="pewFire">
    <Arguments>e:n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftVector2">
    <Arguments>r:xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>xv4n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setColumn">
    <Arguments>xm4:nxv4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="comp">
    <Arguments>nn</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteAng">
    <Arguments>s</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcGoRun">
    <Arguments>e:v</Arguments>
    <Return></Return>
    <Description><![CDATA[Tells the NPC to run to position V]]></Description>
  </Function>

  <Function Name="mix">
    <Arguments>vvn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Combines vector 1's XYZ with vector 2's XYZ by a proportion given by argument 3 (between 0 and 1)]]></Description>
  </Function>

  <Function Name="setX">
    <Arguments>v:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a copy of the vector with X replaced (use as Vec = Vec:setX(...))]]></Description>
  </Function>

  <Function Name="inNoclip">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player in noclip mode?]]></Description>
  </Function>

  <Function Name="average">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>an</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewMaxAmmo">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="coshr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec">
    <Arguments>xv4</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="weapon">
    <Arguments>e:s</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyTorque">
    <Arguments>b:v</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="exp">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns e to the power of the Argument (same as e()^N but shorter and faster this way)]]></Description>
  </Function>

  <Function Name="clip2">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the amount of ammo in the secondary clip of weapon E, -1 if there is no secondary clip 1)]]></Description>
  </Function>

  <Function Name="selfDestruct">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Removes the expression]]></Description>
  </Function>

  <Function Name="gDeleteAllEnt">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>mv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="attachmentPos">
    <Arguments>e:s</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="concat">
    <Arguments>r:s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setQuaternion">
    <Arguments>t:sq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xwl=xwlsxwl</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="abs">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the Magnitude of the Argument]]></Description>
  </Function>

  <Function Name="setElement">
    <Arguments>xm4:nnn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inVehicle">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player in a vehicle?]]></Description>
  </Function>

  <Function Name="bind">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>xv2</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoShadow">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="table">
    <Arguments>xwl:s</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>sn</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerOffset">
    <Arguments>vv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[You input two vector points, it returns ranger data]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=ts</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="min">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundStop">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setBone">
    <Arguments>r:nb</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyOffsetForce">
    <Arguments>b:vv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="hit">
    <Arguments>xrd:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="replace">
    <Arguments>s:ss</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Finds and replaces every occurrence of the first argument with the second argument]]></Description>
  </Function>

  <Function Name="aimEntity">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the entity that the entity is aiming at]]></Description>
  </Function>

  <Function Name="holoPos">
    <Arguments>nv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewPlayerDamageRadius">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetEnt">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerIgnoreWorld">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[Default is 0, if any other value is given it will ignore world]]></Description>
  </Function>

  <Function Name="index">
    <Arguments>s:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns Nth letter of the string, formatted as a string.]]></Description>
  </Function>

  <Function Name="x">
    <Arguments>m:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the local x direction vector from a 3x3 coordinate reference frame matrix ( same as M:column(1) )]]></Description>
  </Function>

  <Function Name="findToArray">
    <Arguments></Arguments>
    <Return>r</Return>
    <Description><![CDATA[Formats the query as an array, R[Index,entity] to get an entity.]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>qq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pushMatrix">
    <Arguments>r:m</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rotate">
    <Arguments>v:a</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the rotated vector]]></Description>
  </Function>

  <Function Name="frac">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the Fractional part of the Argument (same as floor)]]></Description>
  </Function>

  <Function Name="setComplex">
    <Arguments>t:sc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="playerDamage">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if player vs player damage is enabled on the server]]></Description>
  </Function>

  <Function Name="insertVector4">
    <Arguments>r:nxv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetNum">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments>v</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Converts a vector to a quaternion (returns V.x*i + V.y*j + V.z*k)]]></Description>
  </Function>

  <Function Name="setTrails">
    <Arguments>e:nnnsvnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[StartSize, EndSize, Length, Material, Color (RGB), Alpha, AttachmentID, AdditiveAdds a trail to E with the specified attributes.]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>xm4xm4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>ss</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>m</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="distance">
    <Arguments>xv2:xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="random">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns a random floating-point number between the specified interval [a <= x < b ]]]></Description>
  </Function>

  <Function Name="removeNumber">
    <Arguments>r:n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="hostname">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the Name of the server]]></Description>
  </Function>

  <Function Name="lastSaid">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns what the player E last said.]]></Description>
  </Function>

  <Function Name="insertEntity">
    <Arguments>r:ne</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="fileClk">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns whether the execution was run because a file finished uploading and was that file of a specific file name.]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>xv2n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="bOr">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="dot">
    <Arguments>xv4:xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="id">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the numeric id of an entity]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>t</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>xv4n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:or">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftAngle">
    <Arguments>r:a</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sech">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the hyperbolic secant of C]]></Description>
  </Function>

  <Function Name="pushVector4">
    <Arguments>r:xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>xm4xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xrd=xwlsxrd</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isWeapon">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity a weapon?]]></Description>
  </Function>

  <Function Name="rgb2hsv">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Converts V from the [http://en.wikipedia.org/wiki/RGB_color_space RGB color space] to the [http://en.wikipedia.org/wiki/HSV_color_space HSV color space]]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nr...</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="perf">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[If used as a while loop condition, stabilizes the expression around  hardquota used.]]></Description>
  </Function>

  <Function Name="vec4">
    <Arguments>xv2xv2</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toLocalAxis">
    <Arguments>e:v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Transforms a world axis to an axis local to E.]]></Description>
  </Function>

  <Function Name="number">
    <Arguments>t:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cot">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the cotangent of C]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>xv4xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findCanQuery">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if find functions can be used, 0 otherwise.]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>bb</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>xv2n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftMatrix4">
    <Arguments>r:xm4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xm4xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findByClass">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Find all entities with the given class]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>q</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Converts Q to a transformation matrix]]></Description>
  </Function>

  <Function Name="fileLoadList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Loads a list of the file names contained in the client's data/e2files folder.]]></Description>
  </Function>

  <Function Name="op:iwc">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rotationVector">
    <Arguments>q</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff)]]></Description>
  </Function>

  <Function Name="min">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findIncludePlayerProps">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Include entities owned by this player from future finds, and remove others not in the whitelist]]></Description>
  </Function>

  <Function Name="clk">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the current execution was caused by the inserted name]]></Description>
  </Function>

  <Function Name="toWorld">
    <Arguments>b:v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Transforms V from local coordinates (as seen from B) to world coordinates]]></Description>
  </Function>

  <Function Name="keyAttack1">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player pressing their primary fire key?]]></Description>
  </Function>

  <Function Name="chatClk">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the chip is being executed because of a chat event. Returns 0 otherwise.]]></Description>
  </Function>

  <Function Name="fileListTable">
    <Arguments></Arguments>
    <Return>t</Return>
    <Description><![CDATA[Returns a table of file names that have been loaded. (Tbl["filename"] = "filename")]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nxm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="normalized">
    <Arguments>xv4:</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="steamID">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Gets the steam ID of the player]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>xv4:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>a</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>mm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rgb2digi">
    <Arguments>vn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Converts an RGB vector V to a number in digital screen format. N Specifies a mode, either 0, 2 or 3, corresponding to Digital Screen color modes.]]></Description>
  </Function>

  <Function Name="setWirelink">
    <Arguments>xwl:sxwl</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setVector">
    <Arguments>r:nv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="match">
    <Arguments>s:s</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>m</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalClk">
    <Arguments>ssn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xwl=xwls</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix2">
    <Arguments></Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[Creates a 2x2 zero matrix]]></Description>
  </Function>

  <Function Name="op:cnd">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="popComplex">
    <Arguments>r:</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="acos">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the inverse cosine of C]]></Description>
  </Function>

  <Function Name="complex">
    <Arguments>xwl:s</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:leq">
    <Arguments>aa</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="coth">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the hyperbolic cotangent of C]]></Description>
  </Function>

  <Function Name="isFrozen">
    <Arguments>b:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if B is frozen, 0 otherwise]]></Description>
  </Function>

  <Function Name="positive">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="left">
    <Arguments>s:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns N amount of characters starting from the leftmost character]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Rounds XYZ down to the nearest integer]]></Description>
  </Function>

  <Function Name="matrix2">
    <Arguments>t:s</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="lastSaidTeam">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the last message was sent in the team chat, 0 otherwise.]]></Description>
  </Function>

  <Function Name="shift">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="timer">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets a one-time timer with entered name and delay in milliseconds]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Rounds XYZ to the nearest integer]]></Description>
  </Function>

  <Function Name="setComplex">
    <Arguments>xwl:sc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>nnsn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sec">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the secant of N degrees ]]></Description>
  </Function>

  <Function Name="findClipToBox">
    <Arguments>vv</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>n=xwls</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="lower">
    <Arguments>s:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[All characters are made lowercase]]></Description>
  </Function>

  <Function Name="driver">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the driver of the vehicle if there is one, nil otherwise]]></Description>
  </Function>

  <Function Name="egpText">
    <Arguments>xwl:nsxv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoModel">
    <Arguments>ns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteNum">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="hitNormal">
    <Arguments>xrd:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="explode">
    <Arguments>s:s</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Splits the string into an array, along the boundaries formed by the string S. See also String.Explode]]></Description>
  </Function>

  <Function Name="gSetEnt">
    <Arguments>ne</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teamScore">
    <Arguments>n:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cross">
    <Arguments>xv2:xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpTextLayout">
    <Arguments>xwl:nsxv2xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="hintDriver">
    <Arguments>e:sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Displays a hint popup to the driver of vehicle E, with message S for N seconds (N being clamped between 0.7 and 7). Same return value as printDriver.]]></Description>
  </Function>

  <Function Name="holoScale">
    <Arguments>n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Index\nReturns the scale of the given hologram]]></Description>
  </Function>

  <Function Name="sqrt">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the Square Root of the Argument]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nv...</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>vv</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ang">
    <Arguments></Arguments>
    <Return>a</Return>
    <Description><![CDATA[Same as ang(0,0,0)]]></Description>
  </Function>

  <Function Name="shiftVector">
    <Arguments>r:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments>c</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Creates a quaternion with real and "i" parts equal to C]]></Description>
  </Function>

  <Function Name="gGetNum">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cross">
    <Arguments>v:v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv2=ts</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="parentBone">
    <Arguments>e:</Arguments>
    <Return>b</Return>
    <Description><![CDATA[Returns the bone E is parented to.]]></Description>
  </Function>

  <Function Name="fileClk">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns whether the execution was run because a file finished uploading.]]></Description>
  </Function>

  <Function Name="setDiagonal">
    <Arguments>m:nnn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Sets the elements of the leading diagonal]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv4=xwls</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setAngle">
    <Arguments>xwl:sa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>t=xwlst</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="y">
    <Arguments>v:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the y component of the vector]]></Description>
  </Function>

  <Function Name="pushMatrix2">
    <Arguments>r:xm2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Rounds XYZ to argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="setRow">
    <Arguments>m:nv</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Sets the values of a row. The first argument given specifies the row, the vector contains the values to set]]></Description>
  </Function>

  <Function Name="pewCanFire">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>a=rna</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>mm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="hasConstraints">
    <Arguments>e:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the number of the constraints E has with the given constraint type (see the types list below)]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments>xwl:s</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoClip">
    <Arguments>nnvvn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angVelVector">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="max">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the vector with the greatest length]]></Description>
  </Function>

  <Function Name="bNot">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerFilter">
    <Arguments>r</Arguments>
    <Return></Return>
    <Description><![CDATA[Feed an array of entities you don't want the trace to hit]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[ Rounds Argument 1 to Argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="count">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalClearOnRemove">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clears the signal that the chip sends when it is removed from the world.]]></Description>
  </Function>

  <Function Name="getColor">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the color of an entity as a vector (R,G,B)]]></Description>
  </Function>

  <Function Name="hasInput">
    <Arguments>xwl:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns true if the linked component has an input of the specified name.]]></Description>
  </Function>

  <Function Name="pewAuthor">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="max">
    <Arguments>nnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the highest value Argument]]></Description>
  </Function>

  <Function Name="setColor">
    <Arguments>e:v</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="reset">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Reset the expression itself as if it was just spawned, stops execution]]></Description>
  </Function>

  <Function Name="wrap">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findExcludeEntity">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude E from future finds]]></Description>
  </Function>

  <Function Name="fileWrite">
    <Arguments>ss</Arguments>
    <Return></Return>
    <Description><![CDATA[Writes a file to your data folder (automatically uploads to server). First argument is the file name, second argument is the data to be written.]]></Description>
  </Function>

  <Function Name="signalSetGroup">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets the E-2's current signal group to S, this is applied during runOnSignal, signalSend, and signalSetOnRemove calls, so call it first.]]></Description>
  </Function>

  <Function Name="cot">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the cotangent of N degrees ]]></Description>
  </Function>

  <Function Name="signalSenderId">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the entity ID of the chip that sent the signal. Useful if the entity doesn't exist anymore.]]></Description>
  </Function>

  <Function Name="pushVector">
    <Arguments>r:v</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>xrd</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:def">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="hsv2rgb">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Converts V from the [http://en.wikipedia.org/wiki/HSV_color_space HSV color space] to the [http://en.wikipedia.org/wiki/RGB_color_space RGB color space]]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="xyz">
    <Arguments>xwl:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Retrieves the X/Y/Z as the corresponding values in the vector.]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>b</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isHiSpeed">
    <Arguments>xwl:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns true if the linked component is high-speed capable.]]></Description>
  </Function>

  <Function Name="op:leq">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClearWhiteEntityList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the player whitelist]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>cq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="i">
    <Arguments></Arguments>
    <Return>c</Return>
    <Description><![CDATA[Returns the imaginary unit i]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>n:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec">
    <Arguments>xv2n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sinhr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>nc</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="popVector4">
    <Arguments>r:</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isSteamFriend">
    <Arguments>e:e</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns if the given Entity is a steam friend of the first Entity]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>an</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Rounds PYR down to argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="setY">
    <Arguments>xv4:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>xv4xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setSkin">
    <Arguments>e:n</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets Es skin number.]]></Description>
  </Function>

  <Function Name="setElement">
    <Arguments>xm2:nnn</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ln">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[ Returns the logarithm to base e of the Argument]]></Description>
  </Function>

  <Function Name="find">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[Equivalent to findResult(1)]]></Description>
  </Function>

  <Function Name="inrange">
    <Arguments>xv2xv2xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inrange">
    <Arguments>nnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>vs</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>vn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="boxMax">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the maximum local XYZ of the entity's bounding box (the "highest" corner), as a local position vector]]></Description>
  </Function>

  <Function Name="pop">
    <Arguments>r:</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="atan">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="transpose">
    <Arguments>m</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Returns the transpose of a matrix]]></Description>
  </Function>

  <Function Name="vec">
    <Arguments></Arguments>
    <Return>v</Return>
    <Description><![CDATA[Same as vec(0,0,0)]]></Description>
  </Function>

  <Function Name="setXyz">
    <Arguments>xwl:v</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets the X/Y/Z to the corresponding values in the vector.]]></Description>
  </Function>

  <Function Name="pewGravity">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="runOnLast">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[If  != 0, the chip will run once when it is removed, setting the last() flag when it does.]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>xv2n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rotate">
    <Arguments>xv2:n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>aa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyOffsetForce">
    <Arguments>e:vv</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies force to the entity according to the first vector from the location of the second]]></Description>
  </Function>

  <Function Name="isFrozen">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity frozen?]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nxrd...</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toWorldAxis">
    <Arguments>e:v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Transforms an axis local to E to a global axis.]]></Description>
  </Function>

  <Function Name="setColumn">
    <Arguments>m:nv</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Sets the values of a column. The first argument given specifies the column, the vector contains the values to set]]></Description>
  </Function>

  <Function Name="findIncludeClass">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Include entities with this class (or partial class name) in future finds, and remove others not in the whitelist]]></Description>
  </Function>

  <Function Name="ejectPod">
    <Arguments>e:</Arguments>
    <Return></Return>
    <Description><![CDATA[Ejects player in vehicle]]></Description>
  </Function>

  <Function Name="egpColor">
    <Arguments>xwl:nnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="array">
    <Arguments></Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="tanh">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the hyperbolic tangent of N]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments>xwl:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the entity of the linked component.]]></Description>
  </Function>

  <Function Name="sub">
    <Arguments>s:nn</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns a substring, starting at the first number argument and ending at the second]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>nv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundStop">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>xm2</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClipFromBox">
    <Arguments>vv</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftMatrix2">
    <Arguments>r:xm2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>vq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angles">
    <Arguments>b:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns Bs pitch, yaw and roll angles]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>ne...</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="right">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a vector describing Bs right direction]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the remainder after the components of vector 1 have been divided by the components of vector 2]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>vvv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Clamps vector 1's XYZ between the XYZ of vector 2(min) and vector 3(max)]]></Description>
  </Function>

  <Function Name="height">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the height of a player or npc]]></Description>
  </Function>

  <Function Name="op:dec">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpTextLayout">
    <Arguments>xwl:nsxv2xv2vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angnorm">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the normalized angle of a number]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>xm2</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vector">
    <Arguments>r:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>xv2n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:inc">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="map">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the current map name]]></Description>
  </Function>

  <Function Name="findAllowClass">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities with this class (or partial class name) from the blacklist]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>cn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalSetOnRemove">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[Sets the signal that the chip sends when it is removed from the world.]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnnvn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setRanger">
    <Arguments>xwl:sxrd</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>xm2xm2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="hasConstraints">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the number of the constraints E has]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=xwln</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="random">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns a random floating-point number between 0 and 1 [0 <= x < 1 ]]]></Description>
  </Function>

  <Function Name="format">
    <Arguments>s...</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Formats a values exactly like Lua's [http://www.lua.org/manual/5.1/manual.html#pdf-string.format string.format]. Any number and type of parameter can be passed through the "...". Prints errors to the chat area.]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetNum">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>ns...</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="forward">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a vector describing Bs forward direction]]></Description>
  </Function>

  <Function Name="log">
    <Arguments>nc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the logarithm of C to a real base N]]></Description>
  </Function>

  <Function Name="popString">
    <Arguments>r:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewSpeed">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>as</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>q</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpBoxoutline">
    <Arguments>xwl:nxv2xv2vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerPersist">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[Passing 0 (the default) resets all ranger flags and filters every execution and after calling ranger/rangerOffset. Passing anything else will make the flags and filters persist until they're changed again.]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>na</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="det">
    <Arguments>m</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the determinant of a matrix (Does not work for 4x4 matrices)]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Rounds Argument 1 up to Argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>na</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv2=rn</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=xwln</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="diagonal">
    <Arguments>xm4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClipToClass">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities that are NOT of this class]]></Description>
  </Function>

  <Function Name="steamFriends">
    <Arguments>e:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Returns a Array with E's steam friends on the server E is playing on]]></Description>
  </Function>

  <Function Name="removeVector2">
    <Arguments>r:n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>m=xwlsm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>xv2:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findExcludePlayer">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude this player from future finds (put it on the entity blacklist)]]></Description>
  </Function>

  <Function Name="rangerAngle">
    <Arguments>nnn</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[You input the distance, x-angle and y-angle (both in degrees) it returns ranger data]]></Description>
  </Function>

  <Function Name="z">
    <Arguments>m:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the local z direction vector from a 3x3 coordinate reference frame matrix ( same as M:column(3) )]]></Description>
  </Function>

  <Function Name="angle">
    <Arguments>xwl:s</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteAll">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Deletes all of the global values stored under the current group, including the ones stored by gSet(S)]]></Description>
  </Function>

  <Function Name="keys">
    <Arguments>t:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mix">
    <Arguments>xv2xv2n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isUnderWater">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity under water?]]></Description>
  </Function>

  <Function Name="gShare">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findRE">
    <Arguments>s:sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the 1st occurrence of the string S starting at N and going to the end of the string using REGEX functions, returns 0 if not found]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>e</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Creates a reference frame matrix from an entity's local direction vectors by columns in the order ( x, y, z )]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>a=xwlsa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>nq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>e:snsn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpToMouse">
    <Arguments>xwl:e</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>a</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[Returns a 4x4 reference frame matrix as described by the angle A. Multiplying by this matrix will be the same as rotating by the given angle.]]></Description>
  </Function>

  <Function Name="bone">
    <Arguments>e:n</Arguments>
    <Return>b</Return>
    <Description><![CDATA[Returns Es Nth bone]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>ee</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="quaternion">
    <Arguments>xwl:s</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setQuaternion">
    <Arguments>xwl:sq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClearBlackList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the entire blacklist]]></Description>
  </Function>

  <Function Name="isCrouch">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player crouching?]]></Description>
  </Function>

  <Function Name="setMatrix4">
    <Arguments>t:sxm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="j">
    <Arguments>q:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the j component of the quaternion]]></Description>
  </Function>

  <Function Name="dupefinished">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 when the contraption has finished duping. (Only triggers on Adv Duplicator, not the normal duplicator)]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>t=xwls</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyForce">
    <Arguments>v</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies force according to the vector given (Forces independently on each axis unlike a vector thruster)]]></Description>
  </Function>

  <Function Name="findDisallowModel">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities with this model (or partial model name) from the whitelist]]></Description>
  </Function>

  <Function Name="getSkin">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets Es current skin number.]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findPlayerUpdateRate">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the minimum delay between entity find events per player]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>xv4xv4xv4xv4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments></Arguments>
    <Return>q</Return>
    <Description><![CDATA[Creates a zero quaternion]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>a=rn</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pushEntity">
    <Arguments>r:e</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="velL">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the local velocity of the entity]]></Description>
  </Function>

  <Function Name="eyeAngles">
    <Arguments>e:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Gets a players view direction]]></Description>
  </Function>

  <Function Name="hideChat">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[If N != 0, hide the chat message that is currently being processed.]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>aa</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="normalized">
    <Arguments>xv2:</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sinr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the sine of N radians ]]></Description>
  </Function>

  <Function Name="normalized">
    <Arguments>v:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the normalized vector]]></Description>
  </Function>

  <Function Name="positive">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a vector containing the positive value of each vector component, equivalent to abs(N)]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="trimLeft">
    <Arguments>s:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Trims away opening spaces on the string]]></Description>
  </Function>

  <Function Name="reverse">
    <Arguments>s:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns a reversed version of S]]></Description>
  </Function>

  <Function Name="findExcludeModel">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude entities with this model (or partial model name) from future finds]]></Description>
  </Function>

  <Function Name="egpTriangle">
    <Arguments>xwl:nxv2xv2xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xrd=xwls</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoRenderFX">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="eye">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets a players view direction else entity forward direction]]></Description>
  </Function>

  <Function Name="getAlpha">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the alpha of an entity]]></Description>
  </Function>

  <Function Name="fileLoaded">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns whether or not the file has been loaded onto the server.]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnvnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isConstrainedTo">
    <Arguments>e:sn</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the Nth entity E was constrained to with the given constraint type (see the types list below)]]></Description>
  </Function>

  <Function Name="close">
    <Arguments>n:</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shiftR">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Shifts the angle's components right:  shiftR( p,y,r ) = ( r,p,y )]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vector2">
    <Arguments>xwl:s</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="z">
    <Arguments>xv4:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="armor">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the armor of the player]]></Description>
  </Function>

  <Function Name="log">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the natural logarithm of C]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPos">
    <Arguments>xwl:nxv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnvvn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="right">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the right direction of the entity]]></Description>
  </Function>

  <Function Name="replaceRE">
    <Arguments>s:ss</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Finds and replaces every occurrence of the first argument using REGEX with the second argument]]></Description>
  </Function>

  <Function Name="aimBone">
    <Arguments>e:</Arguments>
    <Return>b</Return>
    <Description><![CDATA[Returns the bone the player is currently aiming at]]></Description>
  </Function>

  <Function Name="holoClipEnabled">
    <Arguments>nnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findDisallowPlayer">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove this player from the entity whitelist]]></Description>
  </Function>

  <Function Name="toChar">
    <Arguments>n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns a one-character string from its [http://en.wikipedia.org/wiki/ASCII ASCII code], where 32 ≤ argument 1 ≤ 255. An empty string is returned for numbers outside that range.]]></Description>
  </Function>

  <Function Name="name">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Gets the name of a player ]]></Description>
  </Function>

  <Function Name="soundVolume">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewAmmoReloadTime">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalName">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the name of the received signal.]]></Description>
  </Function>

  <Function Name="rangerHitWater">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[Default is 0, if any other value is given it will hit water]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>nn</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Formats a number as a string, using argument 2 as the base. i.e. using 16 for base would convert the number to hex.]]></Description>
  </Function>

  <Function Name="isOnGround">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player/NPC resting on something?]]></Description>
  </Function>

  <Function Name="isLan">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if lan mode is enabled]]></Description>
  </Function>

  <Function Name="shiftString">
    <Arguments>r:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pos">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns Bs position]]></Description>
  </Function>

  <Function Name="length">
    <Arguments>v:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the length of the vector]]></Description>
  </Function>

  <Function Name="setMatrix">
    <Arguments>r:nm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>qn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteVec">
    <Arguments>n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="send">
    <Arguments>n:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sum">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inverseA">
    <Arguments>xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sech">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the hyperbolic secant of N ]]></Description>
  </Function>

  <Function Name="findUpdateRate">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the minimum delay between entity find events on a chip]]></Description>
  </Function>

  <Function Name="fileList">
    <Arguments></Arguments>
    <Return>r</Return>
    <Description><![CDATA[Returns an array of file names that have been loaded.]]></Description>
  </Function>

  <Function Name="maxIndex">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>t:s</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toAngle">
    <Arguments>v:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Gets the angles of the vector]]></Description>
  </Function>

  <Function Name="tanr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the tangent of N radians ]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>xwl</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoScaleUnits">
    <Arguments>nv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="lastSaid">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the last message in the chat log.]]></Description>
  </Function>

  <Function Name="isAdmin">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player an admin?]]></Description>
  </Function>

  <Function Name="getColor4">
    <Arguments>e:</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[Returns the color of an entity as a 4D vector (R,G,B,A)]]></Description>
  </Function>

  <Function Name="egpCircle">
    <Arguments>xwl:nxv2xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angle">
    <Arguments>r:n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:lth">
    <Arguments>aa</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpTriangle">
    <Arguments>xwl:nxv2xv2xv2xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="conj">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Returns the conjugate of C]]></Description>
  </Function>

  <Function Name="gSetEnt">
    <Arguments>se</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClipFromName">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities that do have this name]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>b=rn</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPoly">
    <Arguments>xwl:nr</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="clone">
    <Arguments>t:</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="log">
    <Arguments>cc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="swapElements">
    <Arguments>xm4:nnnn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteVec">
    <Arguments></Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>sns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="conj">
    <Arguments>q</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns the conjugate of Q]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>e=ts</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sendLine">
    <Arguments>n:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>qq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpGetElements">
    <Arguments>xwl:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>c=xwls</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>cn</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toByte">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the ASCII code of the 1st character in the string]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>qq</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>b=rnb</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setVector">
    <Arguments>xwl:sv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="massCenter">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns Bs Center of Mass]]></Description>
  </Function>

  <Function Name="asin">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the inverse sine of the argument, in degrees]]></Description>
  </Function>

  <Function Name="pushBone">
    <Arguments>r:b</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="yaw">
    <Arguments>a:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the yaw of the angle]]></Description>
  </Function>

  <Function Name="findDisallowPlayerProps">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities owned by this player from the whitelist]]></Description>
  </Function>

  <Function Name="setString">
    <Arguments>r:ns</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertNumber">
    <Arguments>r:nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=xwls</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>n=ts</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="i">
    <Arguments>q:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the i component of the quaternion]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>a</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPos2">
    <Arguments>xwl:nxv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>qc</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isAlive">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player or NPC alive?]]></Description>
  </Function>

  <Function Name="gSetStr">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>c=xwlsc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setAngle">
    <Arguments>t:sa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isWeldedTo">
    <Arguments>e:n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the Nth entity E was welded to]]></Description>
  </Function>

  <Function Name="egpText">
    <Arguments>xwl:nsxv2xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="popVector2">
    <Arguments>r:</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="minVec">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a vector combining the lowest value components of V1 and V2]]></Description>
  </Function>

  <Function Name="acos">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the inverse cosine of the argument, in degrees]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>m=ts</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec4">
    <Arguments>nnnn</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[Makes a 4D vector]]></Description>
  </Function>

  <Function Name="op:and">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findIncludeEntity">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Include E in future finds, and remove others not in the whitelist]]></Description>
  </Function>

  <Function Name="length2">
    <Arguments>v:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the squared length of the vector]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>sa</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>m=tsm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="getMaterial">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the material of an entity]]></Description>
  </Function>

  <Function Name="asinr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the inverse sine of the argument, in radians]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>nnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[If Arg1 = Arg3 (max) returns Arg3; otherwise returns Arg1.]]></Description>
  </Function>

  <Function Name="holoAlpha">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoParent">
    <Arguments>ne</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetStr">
    <Arguments>n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="dehomogenized">
    <Arguments>xv4:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerHull">
    <Arguments>nvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Input: Distance, Hull MinSize, Hull MaxSize]]></Description>
  </Function>

  <Function Name="outputs">
    <Arguments>xwl:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Returns an array of all the outputs that XWL has without their types. Returns an empty array if it has none]]></Description>
  </Function>

  <Function Name="runOnFile">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[Makes the expression execute when the file has finished uploading to the server.]]></Description>
  </Function>

  <Function Name="boneCount">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns Es number of bones]]></Description>
  </Function>

  <Function Name="sqrt">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the square root of C]]></Description>
  </Function>

  <Function Name="printDriver">
    <Arguments>e:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Posts a string to the chat of Es driver. Returns 1 if the text was printed, 0 if not.]]></Description>
  </Function>

  <Function Name="npcAttack">
    <Arguments>e:</Arguments>
    <Return></Return>
    <Description><![CDATA[ Tells the NPC to use their melee attack.]]></Description>
  </Function>

  <Function Name="minVec">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoEntity">
    <Arguments>n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the entity corresponding to the hologram given by the specified index.]]></Description>
  </Function>

  <Function Name="wirelink">
    <Arguments>xwl:s</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerOffsetHull">
    <Arguments>nvvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Inputs: Distance, StartPos, Direction, Hull BoxSize]]></Description>
  </Function>

  <Function Name="lookupAttachment">
    <Arguments>e:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="dot">
    <Arguments>xv2:xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="min">
    <Arguments>nnnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the lowest value Argument]]></Description>
  </Function>

  <Function Name="rangerHull">
    <Arguments>nnnvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Inputs: Distance, X Skew, Y Skew, Hull MinSize, Hull MaxSize]]></Description>
  </Function>

  <Function Name="egpBox">
    <Arguments>xwl:nxv2xv2vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pos">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the position of the entity]]></Description>
  </Function>

  <Function Name="setVector4">
    <Arguments>xwl:sxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="maxquota">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[The ops left before hard quota is exceeded and the expression shuts down]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ranger">
    <Arguments>t:s</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="distance2">
    <Arguments>xv2:xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoClipsAvailable">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:if">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findPlayerByName">
    <Arguments>s</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the player with the given name, this is an exception to the rule]]></Description>
  </Function>

  <Function Name="shiftVector4">
    <Arguments>r:</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewCoreHealth">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>b=xwlsb</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteAllAng">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mass">
    <Arguments>b:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns Bs mass]]></Description>
  </Function>

  <Function Name="bearing">
    <Arguments>e:v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the bearing from the entity to the vector]]></Description>
  </Function>

  <Function Name="cosr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the cosine of N radians ]]></Description>
  </Function>

  <Function Name="abs">
    <Arguments>c</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the absolute value of C]]></Description>
  </Function>

  <Function Name="shiftMatrix4">
    <Arguments>r:</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpTriangle">
    <Arguments>xwl:nxv2xv2xv2vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>xv4n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>an</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Rounds PYR up to argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="egpText">
    <Arguments>xwl:nsnnnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments>n</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Creates a quaternion with real part equal to N]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalGroup">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the group name of the received signal.]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setVector2">
    <Arguments>r:nxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="atanr">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the inverse tangent of the arguments (arg1 / arg2), in radians. This function accounts for positive/negative arguments, and arguments at or close to 0]]></Description>
  </Function>

  <Function Name="egpTriangle">
    <Arguments>xwl:nnnnnnnnnnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="lastSaidTeam">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the last message was sent in the team chat, 0 otherwise.]]></Description>
  </Function>

  <Function Name="findClipToModel">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities that do NOT have this model]]></Description>
  </Function>

  <Function Name="npcGetTarget">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns what the npc is currently targeting.]]></Description>
  </Function>

  <Function Name="soundPitch">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm2=rn</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>m=rnm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPolyColor">
    <Arguments>xwl:nxv4r</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="swapColumns">
    <Arguments>xm4:nn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyForce">
    <Arguments>e:v</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies force to the entity according to the given vector's direction and magnitude]]></Description>
  </Function>

  <Function Name="pewIsCannon">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundVolume">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findDisallowEntity">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove E from the whitelist]]></Description>
  </Function>

  <Function Name="shiftEntity">
    <Arguments>r:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoReset">
    <Arguments>nsvvs</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetAng">
    <Arguments>na</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoColor">
    <Arguments>nv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>e=xwls</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toWorld">
    <Arguments>e:a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Transforms from an angle local to E to a world angle.]]></Description>
  </Function>

  <Function Name="egpBoxOutline">
    <Arguments>xwl:nxv2xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vector2">
    <Arguments>r:n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:brk">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpLine">
    <Arguments>xwl:nxv2xv2xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="diagonal">
    <Arguments>xm2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="abs">
    <Arguments>q</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns absolute value of Q]]></Description>
  </Function>

  <Function Name="ranger">
    <Arguments>nnn</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Same as above with added inputs for X and Y skew]]></Description>
  </Function>

  <Function Name="array">
    <Arguments>...</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="lockPod">
    <Arguments>e:n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>vv</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpTextAlign">
    <Arguments>xwl:nnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMatrix2">
    <Arguments>t:sxm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm4=rnxm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyAngForce">
    <Arguments>b:a</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies torque to B according to A]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>xwl</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="readString">
    <Arguments>xwl:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Reads a null-terminated string from the given address. Returns an empty string on failure.]]></Description>
  </Function>

  <Function Name="rangerOffsetHull">
    <Arguments>vvvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Inputs: StartPos, EndPos, Hull MinSize, Hull MaxSize]]></Description>
  </Function>

  <Function Name="matchFirst">
    <Arguments>s:sn</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>m</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[Converts a 3x3 matrix into a 4x4 matrix - all (i,4) and (4,j) are filled with 0's]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=xwlsv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftMatrix">
    <Arguments>r:m</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="selfDestructAll">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Removes the expression and all constrained props]]></Description>
  </Function>

  <Function Name="trace">
    <Arguments>xm2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>cc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=xwlss</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>a</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setZ">
    <Arguments>v:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a copy of the vector with Z replaced (use as Vec = Vec:setZ(...))]]></Description>
  </Function>

  <Function Name="quaternion">
    <Arguments>t:s</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnvn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>cq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>b</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="slerp">
    <Arguments>qqn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments>xrd:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="chatClk">
    <Arguments>e</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the chip is being executed because of a chat event by player E. Returns 0 otherwise.]]></Description>
  </Function>

  <Function Name="gGetGroup">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the name of the current group for the chip]]></Description>
  </Function>

  <Function Name="bind">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpColor">
    <Arguments>xwl:nv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoAng">
    <Arguments>na</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="popMatrix4">
    <Arguments>r:</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMatrix2">
    <Arguments>r:nxm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>mm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qRotation">
    <Arguments>vn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns quaternion for rotation about axis V by angle N]]></Description>
  </Function>

  <Function Name="isInWorld">
    <Arguments>v:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the position vector is within the world, 0 if not]]></Description>
  </Function>

  <Function Name="setElement">
    <Arguments>m:nnn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Sets an element's value. The first two arguments specify the indices (i,j), the third argument is the value to set it to]]></Description>
  </Function>

  <Function Name="shiftL">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Shifts the angle's components left:  shiftL( p,y,r ) = ( y,r,p )]]></Description>
  </Function>

  <Function Name="findRE">
    <Arguments>s:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the 1st occurrence of the string S using REGEX functions, returns 0 if not found]]></Description>
  </Function>

  <Function Name="findIncludePlayer">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Include this player in future finds, and remove other entities not in the entity whitelist]]></Description>
  </Function>

  <Function Name="heading">
    <Arguments>b:v</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="invert">
    <Arguments>r</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="randint">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns a random integer in the specified interval [a <= x <= b ]]]></Description>
  </Function>

  <Function Name="inputClk">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the expression was triggered by an input]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>q=xwlsq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setAlpha">
    <Arguments>e:n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteAllVec">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoParent">
    <Arguments>nb</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="csc">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the cosecant of C]]></Description>
  </Function>

  <Function Name="y">
    <Arguments>xv4:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalSendDirect">
    <Arguments>se</Arguments>
    <Return></Return>
    <Description><![CDATA[Sends signal S to the given chip. Multiple calls for different chips do not overwrite each other.]]></Description>
  </Function>

  <Function Name="egpRemove">
    <Arguments>xwl:n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>c=tsc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="elevation">
    <Arguments>e:v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the elevation from the entity to the vector]]></Description>
  </Function>

  <Function Name="transpose">
    <Arguments>xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerOffsetHull">
    <Arguments>vvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Inputs: StartPos, EndPos, Hull BoxSize]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>m=rn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="min">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the vector with the smallest length]]></Description>
  </Function>

  <Function Name="pewDescription">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cotr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the cotangent of N radians]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Rounds the Argument down to the nearest Integer]]></Description>
  </Function>

  <Function Name="setArray">
    <Arguments>xwl:sr</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findAllowPlayerProps">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities owned by this player from the blacklist]]></Description>
  </Function>

  <Function Name="toNumber">
    <Arguments>s:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Parses a number from a string.]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nt...</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcFace">
    <Arguments>e:v</Arguments>
    <Return></Return>
    <Description><![CDATA[This will rotate the NPC to face position V. This is purely aesthetic and can't be used to aim their weapon.]]></Description>
  </Function>

  <Function Name="acosr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the inverse cosine of the argument, in radians]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xrd=tsxrd</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPos1">
    <Arguments>xwl:nxv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>nxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>bb</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteStr">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xv4n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=ts</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="timeConnected">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns a players time connected to a server]]></Description>
  </Function>

  <Function Name="popMatrix">
    <Arguments>r:</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rotate">
    <Arguments>v:nnn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the rotated vector]]></Description>
  </Function>

  <Function Name="bNot">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pushVector2">
    <Arguments>r:xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv4n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalGetGroup">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Gets the E-2's current signal group]]></Description>
  </Function>

  <Function Name="rotateAroundAxis">
    <Arguments>a:vn</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns the angle A rotated around vector V by N degrees.]]></Description>
  </Function>

  <Function Name="root">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the Nth Root of the first Argument]]></Description>
  </Function>

  <Function Name="tanh">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the hyperbolic tangent of C]]></Description>
  </Function>

  <Function Name="setColor">
    <Arguments>nnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findAllowModel">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities with this model (or partial model name) from the blacklist]]></Description>
  </Function>

  <Function Name="vector">
    <Arguments>t:s</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>xm2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>a=tsa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv2n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="distance2">
    <Arguments>v:v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the squared distance between vectors]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>xm2xm2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qk">
    <Arguments>n</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns N*k]]></Description>
  </Function>

  <Function Name="print">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Posts S to the chat area.]]></Description>
  </Function>

  <Function Name="length2">
    <Arguments>xv2:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="find">
    <Arguments>s:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the 1st occurrence of the string S, returns 0 if not found]]></Description>
  </Function>

  <Function Name="holoSkin">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoClipEnabled">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="printTable">
    <Arguments>t</Arguments>
    <Return></Return>
    <Description><![CDATA[Prints a table like the lua function G.PrintTable|PrintTable does, except to the chat area.]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>cq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="maxVec">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="right">
    <Arguments>s:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns N amount of characters starting from the rightmost character]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments>nnnn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xm2xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm2=xwlsxm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPoly">
    <Arguments>xwl:n...</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>n=xwlsn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec4">
    <Arguments>v</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[Converts a 3D vector into a 4D vector (the w component is set to 0)]]></Description>
  </Function>

  <Function Name="setY">
    <Arguments>xv2:n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetAng">
    <Arguments>sa</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qi">
    <Arguments></Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns quaternion i]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>aaa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Clamps angle 1's PYR between the PYR of angle 2(min) and angle 3(max)]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Formats a number as a string. (Numbers may be concatenated into a string without using this function)]]></Description>
  </Function>

  <Function Name="shiftComplex">
    <Arguments>r:</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyForce">
    <Arguments>b:v</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies force to B according to Vs direction and magnitude]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments>t:s</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=rns</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="connect">
    <Arguments>sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>vvv</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Creates a matrix with vectors by columns]]></Description>
  </Function>

  <Function Name="op:gth">
    <Arguments>aa</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="number">
    <Arguments>r:n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMatrix4">
    <Arguments>r:nxm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inputs">
    <Arguments>xwl:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Returns an array of all the inputs that XWL has without their types. Returns an empty array if it has none]]></Description>
  </Function>

  <Function Name="findExcludeClass">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude entities with this class (or partial class name) from future finds]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>mm</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments>r:n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="up">
    <Arguments>q:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns vector pointing up for Q]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>a=xwls</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec">
    <Arguments>xv2</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>r:n</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=tsv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="max">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the highest value Argument]]></Description>
  </Function>

  <Function Name="i">
    <Arguments>n</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Returns N*i]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=tss</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpColor">
    <Arguments>xwl:nxv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpGetElement">
    <Arguments>xwl:n</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>qq</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="secondaryAmmoType">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the type of secondary ammo of weapon E as number in a string]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>q</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teamName">
    <Arguments>n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setNumber">
    <Arguments>xwl:sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>mn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removeBone">
    <Arguments>r:n</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="x">
    <Arguments>xm4:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findDisallowClass">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities with this class (or partial class name) from the whitelist]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>cn</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="trim">
    <Arguments>s:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Trims away spaces at the beginning and end of a string]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>c</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shiftVector2">
    <Arguments>r:</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gravity">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns gravity]]></Description>
  </Function>

  <Function Name="interval">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[Causes the expression to execute every N milliseconds (minimum delay is 10 milliseconds)]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>nv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>c</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Formats C as a string.]]></Description>
  </Function>

  <Function Name="teamFrags">
    <Arguments>n:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeArray">
    <Arguments>xwl:nr</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Writes an array's elements into a piece of memory. Strings and sub-tables (angles, vectors, matrices) are written as pointers to the actual data. Strings are written null-terminated.]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xm4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angle">
    <Arguments>t:s</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoCreate">
    <Arguments>nvv</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Index, Position, Scale\nCreates a new hologram entity]]></Description>
  </Function>

  <Function Name="findAllowEntities">
    <Arguments>r</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove all entities from R from the blacklist]]></Description>
  </Function>

  <Function Name="setBone">
    <Arguments>t:sb</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="fileCanLoad">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sin">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the sine of C]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pi">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the constant PI]]></Description>
  </Function>

  <Function Name="popVector">
    <Arguments>r:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setEntity">
    <Arguments>r:ne</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rotationAngle">
    <Arguments>q</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the angle of rotation in degrees (by coder0xff)]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>aa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns the remainder after the components of angle 1 have been divided by the components of angle 2]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>qq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalSender">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the entity of the chip that sent the signal.]]></Description>
  </Function>

  <Function Name="setW">
    <Arguments>xv4:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setDiagonal">
    <Arguments>xm4:xv4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setVector2">
    <Arguments>xwl:sxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>qc</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>nns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nb...</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="bearing">
    <Arguments>b:v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the bearing (yaw) from B to V]]></Description>
  </Function>

  <Function Name="heading">
    <Arguments>e:v</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Gets the elevation and bearing from the entity to the vector]]></Description>
  </Function>

  <Function Name="findInCone">
    <Arguments>vvnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Like findInSphere but with a http://mathworld.wolfram.com/SphericalCone.html Spherical cone, arguments are for position, direction, length, and degrees (works now)]]></Description>
  </Function>

  <Function Name="setRow">
    <Arguments>xm2:nnn</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toDeg">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Converts Radian angles to Degree angles]]></Description>
  </Function>

  <Function Name="soundPitch">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcSetTarget">
    <Arguments>e:e</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="diagonal">
    <Arguments>m</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a vector comprising the elements along the leading diagonal]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>xm4xm4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec4">
    <Arguments>xv2nn</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rotationAxis">
    <Arguments>q</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the axis of rotation (by coder0xff)]]></Description>
  </Function>

  <Function Name="gSetNum">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inrange">
    <Arguments>xv4xv4xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>av</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[Returns a 4x4 reference frame matrix as described by the angle A and the position V. Multiplying by this matrix will be the same as rotating by the given angle and offsetting by the given vector.]]></Description>
  </Function>

  <Function Name="holoCreate">
    <Arguments>nvvavs</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toLocal">
    <Arguments>b:v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Transforms V from world coordinates to local coordinates (as seen from B)]]></Description>
  </Function>

  <Function Name="gDeleteNum">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>nc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ranger">
    <Arguments>n</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[You input max range, it returns ranger data]]></Description>
  </Function>

  <Function Name="fromUnit">
    <Arguments>sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Converts specified units to default garrysmod units]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xm2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removeMatrix4">
    <Arguments>r:n</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="elevation">
    <Arguments>b:v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the elevation (pitch) from B to V]]></Description>
  </Function>

  <Function Name="teamDeaths">
    <Arguments>n:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setWirelink">
    <Arguments>t:sxwl</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="identity2">
    <Arguments></Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[Creates a 2x2 identity matrix]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>b=ts</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteEnt">
    <Arguments>s</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="attachmentAng">
    <Arguments>e:n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="opcounter">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns how many ops have been used so far in this execution plus the amount of hard quota used]]></Description>
  </Function>

  <Function Name="cbrt">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the Cube Root of the Argument]]></Description>
  </Function>

  <Function Name="ammoCount">
    <Arguments>e:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the amount of stored ammo of type S on player E, excluding current clip]]></Description>
  </Function>

  <Function Name="inertia">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the principal components of Bs inertia tensor in the form vec(Ixx, Iyy, Izz)]]></Description>
  </Function>

  <Function Name="findExcludePlayer">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude this player from future finds (put it on the entity blacklist)]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=rn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>e=rn</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalClk">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the chip was executed because of any signal, regardless of name, group or scope. Returns 0 otherwise.]]></Description>
  </Function>

  <Function Name="hint">
    <Arguments>sn</Arguments>
    <Return></Return>
    <Description><![CDATA[Displays a hint popup with message S for N seconds (N being clamped between 0.7 and 7).]]></Description>
  </Function>

  <Function Name="unshiftString">
    <Arguments>r:s</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angnorm">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Gets the normalized angle of an angle]]></Description>
  </Function>

  <Function Name="vector">
    <Arguments>xwl:s</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qj">
    <Arguments></Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns j]]></Description>
  </Function>

  <Function Name="egpText">
    <Arguments>xwl:nsxv2vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClipFromModel">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities that do have this model]]></Description>
  </Function>

  <Function Name="first">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the expression was spawned or reset]]></Description>
  </Function>

  <Function Name="noranger">
    <Arguments></Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerFilter">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Feed entities you don't want the trace to hit]]></Description>
  </Function>

  <Function Name="vec4">
    <Arguments>vn</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[Converts a 3D vector into a 4D vector (the w component is set to the second argument)]]></Description>
  </Function>

  <Function Name="aimNormal">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a normalized directional vector perpendicular to the surface pointed at]]></Description>
  </Function>

  <Function Name="egpSize">
    <Arguments>xwl:nnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:ns</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Writes a null-terminated string to the given address. Returns the next free address or 0 on failure.]]></Description>
  </Function>

  <Function Name="pushMatrix4">
    <Arguments>r:xm4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="maxOfType">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the maximum allowed of a certain type of entity, i.e. maxOfType("wire_thrusters").  Returns 0 if you enter an invalid parameter.]]></Description>
  </Function>

  <Function Name="vector2">
    <Arguments>t:s</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcDisp">
    <Arguments>e:e</Arguments>
    <Return>s</Return>
    <Description><![CDATA[ Returns the NPC's relationship to entity E.]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>nxm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec4">
    <Arguments>xv2</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="identity4">
    <Arguments></Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[Creates a 4x4 identity matrix]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>c</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="clear">
    <Arguments>t:</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="maxPlayers">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the max number of players allowed in the server]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>xwl</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpBox">
    <Arguments>xwl:nnnnnnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nxv2...</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="width">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="tool">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[returns the name of the tool the player E is currently holding]]></Description>
  </Function>

  <Function Name="setTable">
    <Arguments>xwl:st</Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nxm4...</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="distance">
    <Arguments>xv4:xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>nq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setY">
    <Arguments>v:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a copy of the vector with Y replaced (use as Vec = Vec:setY(...))]]></Description>
  </Function>

  <Function Name="pewMaxHealth">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="dot">
    <Arguments>v:v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the vector dot (scalar) product]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv4=ts</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teamScore">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="randint">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns a random integer from 1 to the specified value [1 <= x <= a ]]]></Description>
  </Function>

  <Function Name="real">
    <Arguments>c</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the real part of C]]></Description>
  </Function>

  <Function Name="unshiftVector4">
    <Arguments>r:xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoUnparent">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>cn</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="fileRead">
    <Arguments>s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the string data from a given file (has to be loaded onto server).]]></Description>
  </Function>

  <Function Name="log">
    <Arguments>q</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Calculates natural logarithm of Q]]></Description>
  </Function>

  <Function Name="vec2">
    <Arguments>v</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[Converts a 3D vector into a 2D vector (the z component is dropped)]]></Description>
  </Function>

  <Function Name="rangerHitEntities">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[Default is 1, if value is given as 0 it will ignore entities]]></Description>
  </Function>

  <Function Name="isConstrainedTo">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the first entity E was constrained to]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>an</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toRad">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Converts Degree angles to Radian angles]]></Description>
  </Function>

  <Function Name="setTrails">
    <Arguments>e:nnnsvn</Arguments>
    <Return></Return>
    <Description><![CDATA[StartSize, EndSize, Length, Material, Color (RGB), AlphaAdds a trail to E with the specified attributes.]]></Description>
  </Function>

  <Function Name="toUnit">
    <Arguments>sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Converts default garrysmod units to specified units]]></Description>
  </Function>

  <Function Name="frags">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the number of kills the player has made]]></Description>
  </Function>

  <Function Name="atan">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the inverse tangent of the argument, in degrees]]></Description>
  </Function>

  <Function Name="lastSaidWhen">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the time the last message was sent.]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>e</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>sn</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="element">
    <Arguments>xm2:nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="glonEncode">
    <Arguments>t</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Encodes T into a string, using GLON.]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>mm</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isConstrainedTo">
    <Arguments>e:n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the Nth entity E was constrained to]]></Description>
  </Function>

  <Function Name="writeCell">
    <Arguments>xwl:nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec">
    <Arguments>nnn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Makes a 3D vector]]></Description>
  </Function>

  <Function Name="isSuperAdmin">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player a super admin?]]></Description>
  </Function>

  <Function Name="hasOutput">
    <Arguments>xwl:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns true if the linked component has an output of the specified name.]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>qn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>cc</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoParent">
    <Arguments>nn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoCreate">
    <Arguments>nvva</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Index, Position, Scale, Angle\nCreates a new hologram entity]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>an</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns the remainder after PYR have been divided by argument 2]]></Description>
  </Function>

  <Function Name="findClosest">
    <Arguments>v</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the closest entity to the given point from the previous find event]]></Description>
  </Function>

  <Function Name="inputType">
    <Arguments>xwl:s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the type of input that S is in lowercase. ( "NORMAL"  is changed to "number" )]]></Description>
  </Function>

  <Function Name="shiftAngle">
    <Arguments>r:</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Rounds the Argument to the nearest Integer]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>a=ts</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="minIndex">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vehicle">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the entity of the vehicle that the specified player is in]]></Description>
  </Function>

  <Function Name="setDiagonal">
    <Arguments>xm4:nnnn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>xv2xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removeString">
    <Arguments>r:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="string">
    <Arguments>t:s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="realtime">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the current real time since server-start in seconds*]]></Description>
  </Function>

  <Function Name="log10">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[ Returns the logarithm to base 10 of the Argument]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>xwlxwl</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="column">
    <Arguments>xm2:n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="transpose">
    <Arguments>xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="port">
    <Arguments>n:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>xm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="secr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the secant of N radians ]]></Description>
  </Function>

  <Function Name="pewAmmo">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xwlnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toLocal">
    <Arguments>e:a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Transforms from a world angle to an angle local to E.]]></Description>
  </Function>

  <Function Name="gGetVec">
    <Arguments></Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm4=ts</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removeTrails">
    <Arguments>e:</Arguments>
    <Return></Return>
    <Description><![CDATA[Removes the trail from E]]></Description>
  </Function>

  <Function Name="setMass">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoModel">
    <Arguments>nsn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setColor">
    <Arguments>e:nnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xm2n</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:whl">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="z">
    <Arguments>v:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the z component of the vector]]></Description>
  </Function>

  <Function Name="soundStop">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:not">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xm4n</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="forward">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the forward direction of the entity 2)]]></Description>
  </Function>

  <Function Name="qMod">
    <Arguments>q</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Changes quaternion Q so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff)]]></Description>
  </Function>

  <Function Name="match">
    <Arguments>s:sn</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundDuration">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[soundDuration(string Path to File) Returns the duration of the sound. Note: If the server hasn't the file it returns 60]]></Description>
  </Function>

  <Function Name="max">
    <Arguments>xv2xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoColor">
    <Arguments>nvn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isWeldedTo">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the first entity E was welded to]]></Description>
  </Function>

  <Function Name="element">
    <Arguments>m:nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the element with indices (i,j)]]></Description>
  </Function>

  <Function Name="rangerOffset">
    <Arguments>nvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[You input the range, a position vector, and a direction vector and it returns ranger data]]></Description>
  </Function>

  <Function Name="gamemode">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the name of the current gamemode]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>qc</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="tanhr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="imag">
    <Arguments>c</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the imaginary part of C]]></Description>
  </Function>

  <Function Name="floor">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Rounds Argument 1 down to Argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>xm2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClearBlackPlayerPropList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the prop owner blacklist]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>mn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>xm2n</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cosh">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the hyperbolic cosine of N]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>e:nnsn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setNumber">
    <Arguments>r:nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>b</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="trace">
    <Arguments>m</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the trace of a matrix]]></Description>
  </Function>

  <Function Name="curtime">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the current game time since server-start in seconds*]]></Description>
  </Function>

  <Function Name="array">
    <Arguments>xwl:s</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findByModel">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Find all entities with the given model]]></Description>
  </Function>

  <Function Name="count">
    <Arguments>t:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qk">
    <Arguments></Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns k]]></Description>
  </Function>

  <Function Name="egpBoxoutline">
    <Arguments>xwl:nxv2xv2xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nm...</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoCanCreate">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 when holoCreate() will successfully create a new hologram until the Max limit is reached\nReplaces holoRemainingSpawns()]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv4=rn</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="printColorDriver">
    <Arguments>e:...</Arguments>
    <Return></Return>
    <Description><![CDATA[Like printColor but prints to the driver of a specified vehicle.]]></Description>
  </Function>

  <Function Name="swapRows">
    <Arguments>m:nn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Swaps the two rows specified]]></Description>
  </Function>

  <Function Name="fileAppend">
    <Arguments>ss</Arguments>
    <Return></Return>
    <Description><![CDATA[Adds to the end of a file on your client, and if the file is on the server it adds to that file as well. First argument is the file name, second argument is the data to be written.]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>m</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findDisallowPlayerProps">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities owned by this player from the whitelist]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>b=xwls</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>cn</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="popBone">
    <Arguments>r:</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xrd=ts</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm2=ts</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[Gets the entity of the expression]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>aa</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="up">
    <Arguments>a:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the up vector of the angle.]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>cc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>ss</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyOffsetTorque">
    <Arguments>e:vv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="signalClk">
    <Arguments>sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the chip was executed because the signal S was sent to the scope N, regardless of group. Returns 0 otherwise.]]></Description>
  </Function>

  <Function Name="teamPlayers">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>cq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpFont">
    <Arguments>xwl:nsn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="randvec">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewPlayerDamage">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setColor">
    <Arguments>e:xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="table">
    <Arguments></Arguments>
    <Return>t</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetStr">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpBox">
    <Arguments>xwl:nxv2xv2xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="massCenterL">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the center of mass as a local vector]]></Description>
  </Function>

  <Function Name="printColorDriver">
    <Arguments>e:r</Arguments>
    <Return></Return>
    <Description><![CDATA[Like printColorDriver but takes an array containing all the parameters.]]></Description>
  </Function>

  <Function Name="setMatrix4">
    <Arguments>xwl:sxm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoCreate">
    <Arguments>n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Index\nCreates a new hologram entity]]></Description>
  </Function>

  <Function Name="trusts">
    <Arguments>e:e</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="sinh">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the hyperbolic sine of N]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shootPos">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a players shoot position]]></Description>
  </Function>

  <Function Name="det">
    <Arguments>xm2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setColor">
    <Arguments>e:nnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neq">
    <Arguments>xv4xv4</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="outputType">
    <Arguments>xwl:s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the type of output that S is in lowercase. ( "NORMAL"  is changed to "number" )]]></Description>
  </Function>

  <Function Name="gSetVec">
    <Arguments>nv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shiftL">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Shifts the vector's components left:  shiftL( x,y,z ) = ( y,z,x )]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nc...</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>xv2</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:lth">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="y">
    <Arguments>xm4:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="tan">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the tangent of N degrees ]]></Description>
  </Function>

  <Function Name="maxVec">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="lastSaidWhen">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns when the given player last said something.]]></Description>
  </Function>

  <Function Name="csc">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the cosecant of N degrees ]]></Description>
  </Function>

  <Function Name="op:eq">
    <Arguments>ee</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the remainder after XYZ have been divided by argument 2]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>xv2nn</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertMatrix4">
    <Arguments>r:nxm4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>qq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="team">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the team number a player is on]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>snsn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClearBlackEntityList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the entity blacklist]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>xm4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="wirelink">
    <Arguments>t:s</Arguments>
    <Return>xwl</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>qc</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="entity">
    <Arguments>n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Gets the entity associated with the id]]></Description>
  </Function>

  <Function Name="applyOffsetForce">
    <Arguments>vv</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies force to the expression according to the first vector from the location of the second]]></Description>
  </Function>

  <Function Name="holoScaleUnits">
    <Arguments>n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Index\nReturns the scale of the given hologram]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>e:sns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="getSkinCount">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets Es number of skins.]]></Description>
  </Function>

  <Function Name="applyAngForce">
    <Arguments>a</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="up">
    <Arguments>b:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a vector describing Bs up direction]]></Description>
  </Function>

  <Function Name="fileListClk">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns whether the execution was run because a list was uploaded to the server.]]></Description>
  </Function>

  <Function Name="op:cnt">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setString">
    <Arguments>t:ss</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpLine">
    <Arguments>xwl:nnnnnnnnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mix">
    <Arguments>aan</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Combines angle 1's PYR with angle 2's PYR by a proportion given by argument 3 (between 0 and 1)]]></Description>
  </Function>

  <Function Name="findClearWhitePlayerPropList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the prop owner whitelist]]></Description>
  </Function>

  <Function Name="distance">
    <Arguments>xrd:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="bShr">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpMaterial">
    <Arguments>xwl:ns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teamName">
    <Arguments>n:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the name of the team associated with the team number]]></Description>
  </Function>

  <Function Name="ceil">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Rounds the Argument up to the nearest Integer]]></Description>
  </Function>

  <Function Name="noentity">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns an invalid entity]]></Description>
  </Function>

  <Function Name="setVector4">
    <Arguments>t:sxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shiftR">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Shifts the vector's components right:  shiftR( x,y,z ) = ( z,x,y )]]></Description>
  </Function>

  <Function Name="op:for">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftNumber">
    <Arguments>r:n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cos">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the cosine of N degrees ]]></Description>
  </Function>

  <Function Name="matrix2">
    <Arguments>xwl:s</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoParentAttachment">
    <Arguments>nes</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="killPod">
    <Arguments>e:</Arguments>
    <Return></Return>
    <Description><![CDATA[Kills player in vehicle]]></Description>
  </Function>

  <Function Name="gGetNum">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewSpread">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="unshiftComplex">
    <Arguments>r:c</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="length2">
    <Arguments>xv4:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="log2">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the logarithm to base 2 of the Argument]]></Description>
  </Function>

  <Function Name="type">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Gets the class of an entity]]></Description>
  </Function>

  <Function Name="min">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the lowest value Argument]]></Description>
  </Function>

  <Function Name="shiftL">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="mRotation">
    <Arguments>vn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Creates a 3x3 rotation matrix, where the vector is the axis of rotation, and the number is the angle (anti-clockwise) in degrees. Example*: to rotate a vector (7,8,9) by 50 degrees about the axis (1,1,0), you would write V = mRotation(vec(1,1,0), 50) * vec(7,8,9)]]></Description>
  </Function>

  <Function Name="removeEntity">
    <Arguments>r:n</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="isNPC">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the entity a NPC?]]></Description>
  </Function>

  <Function Name="number">
    <Arguments>xwl:s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inrange">
    <Arguments>vvv</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetStr">
    <Arguments>ns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="bones">
    <Arguments>e:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[Returns an array containing all of Es bones. This array's first element has the index 0!]]></Description>
  </Function>

  <Function Name="isConstrained">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if E has constraints, 0 if not]]></Description>
  </Function>

  <Function Name="vector4">
    <Arguments>t:s</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="boxMin">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the minimum local XYZ of the entity's bounding box (the "lowest" corner), as a local position vector]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>e</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:var">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="exp">
    <Arguments>q</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Raises Euler's constant e to the power Q]]></Description>
  </Function>

  <Function Name="max">
    <Arguments>nnnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the highest value Argument]]></Description>
  </Function>

  <Function Name="column">
    <Arguments>m:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns the column as a vector]]></Description>
  </Function>

  <Function Name="repeat">
    <Arguments>s:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Repeats the input string N times]]></Description>
  </Function>

  <Function Name="popMatrix2">
    <Arguments>r:</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teamFrags">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="shiftMatrix2">
    <Arguments>r:</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="radius">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the size of the object (not precisely, but useful)]]></Description>
  </Function>

  <Function Name="isDedicated">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if server is dedicated, 0 if listen]]></Description>
  </Function>

  <Function Name="gDeleteAng">
    <Arguments>n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findAllowPlayer">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove this player from the entity blacklist]]></Description>
  </Function>

  <Function Name="comp">
    <Arguments></Arguments>
    <Return>c</Return>
    <Description><![CDATA[Returns complex zero]]></Description>
  </Function>

  <Function Name="egpCanDraw">
    <Arguments>xwl:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>nq</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>xv4xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertBone">
    <Arguments>r:nb</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teams">
    <Arguments></Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="massCenter">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the Center of Mass of the entity]]></Description>
  </Function>

  <Function Name="arg">
    <Arguments>c</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the argument of C]]></Description>
  </Function>

  <Function Name="atanr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the inverse tangent of the argument, in radians]]></Description>
  </Function>

  <Function Name="clamp">
    <Arguments>xv4nn</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpCircle">
    <Arguments>xwl:nxv2xv2xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:exp">
    <Arguments>cc</Arguments>
    <Return>c</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="keyUse">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Is the player pressing their use key?]]></Description>
  </Function>

  <Function Name="holoIndex">
    <Arguments>e</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the index of the given hologram entity.]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>xm2xm2xm2xm2</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv2=xwls</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpClear">
    <Arguments>xwl:r</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>e=tse</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments>nnnnnnnnn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:sub">
    <Arguments>aa</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="attachmentPos">
    <Arguments>e:n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pewNumberOfSlices">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="concmd">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Takes a string and executes it in console. Returns 1 if it succeeded and 0 if it failed.The client must enable this in the console with "wire_expression2_concmd 1". "wire_expression2_concmd_whitelist" allows you to choose which commands can be used.[http://www.wiremod.com/forum/151800-post12.html]]]></Description>
  </Function>

  <Function Name="exp">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Raises Euler's constant e to the power of C]]></Description>
  </Function>

  <Function Name="setRow">
    <Arguments>m:nnnn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Sets the values of a row. The first argument given specifies the row(j), the following arguments are the values 1j, 2j, 3j]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>s=rn</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>xwl:s</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcGiveWeapon">
    <Arguments>e:s</Arguments>
    <Return></Return>
    <Description><![CDATA[ Gives the NPC a weapon. Example: E:npcGiveWeapon("pistol"). Other arguments include "ar2", "crowbar", "357", "shotgun", "crossbow", "rpg", "frag", etc. Other such as the bugbait or slam may be buggy.]]></Description>
  </Function>

  <Function Name="findClearBlackModelList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the model blacklist]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv2=rnxv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="x">
    <Arguments>xv2:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetStr">
    <Arguments>s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:mul">
    <Arguments>xv2n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setRow">
    <Arguments>xm4:nnnnn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findAllowPlayerProps">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove entities owned by this player from the blacklist]]></Description>
  </Function>

  <Function Name="mod">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Modulo, returns the Remainder after Argument 1 has been divided by Argument 2. Note "mod(-1, 3) = -1"]]></Description>
  </Function>

  <Function Name="op:add">
    <Arguments>vn</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cschr">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>xrd</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpMaterialFromScreen">
    <Arguments>xwl:nxwl</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="qj">
    <Arguments>n</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns N*j]]></Description>
  </Function>

  <Function Name="findSortByDistance">
    <Arguments>v</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Sorts the entities from the last find event, index 1 is the closest to point V, returns the number of entities in the list]]></Description>
  </Function>

  <Function Name="npcRelationship">
    <Arguments>e:ssn</Arguments>
    <Return></Return>
    <Description><![CDATA[ Same as above, but sets relationship to an entire class specified by the first string. Example: "npc_manhack", "prop_physics".]]></Description>
  </Function>

  <Function Name="real">
    <Arguments>q:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the real component of the quaternion]]></Description>
  </Function>

  <Function Name="sin">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the sine of N degrees ]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="csqrt">
    <Arguments>n</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the complex square root of the real number N]]></Description>
  </Function>

  <Function Name="egpLine">
    <Arguments>xwl:nxv2xv2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:dlt">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="min">
    <Arguments>nnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the lowest value Argument]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnnv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="find">
    <Arguments>s:sn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns the 1st occurrence of the string S starting at N and going to the end of the string, returns 0 if not found]]></Description>
  </Function>

  <Function Name="findClearWhiteClassList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the class whitelist]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>n:n</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inrange">
    <Arguments>aaa</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="runOnChat">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[If N == 0, the chip will no longer run on chat events, otherwise it makes this chip execute when someone chats. Only needs to be called once, not in every execution.]]></Description>
  </Function>

  <Function Name="changed">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="print">
    <Arguments>ns</Arguments>
    <Return></Return>
    <Description><![CDATA[Same as print(S), but can make the text show up in different places. N can be one of the following: _HUD_PRINTCENTER, _HUD_PRINTCONSOLE, _HUD_PRINTNOTIFY, _HUD_PRINTTALK.]]></Description>
  </Function>

  <Function Name="volume">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the volume of the entity]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm2=tsxm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpTextLayout">
    <Arguments>xwl:nsxv2xv2xv4</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>v</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pushString">
    <Arguments>r:s</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findExcludePlayerProps">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude entities owned by this player from future finds]]></Description>
  </Function>

  <Function Name="matrix4">
    <Arguments>nnnnnnnnnnnnnnnn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="holoDelete">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setRow">
    <Arguments>xm4:nxv4</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="applyAngForce">
    <Arguments>e:a</Arguments>
    <Return></Return>
    <Description><![CDATA[Applies torque to the entity according to the given angle]]></Description>
  </Function>

  <Function Name="inv">
    <Arguments>q</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Returns the inverse of Q]]></Description>
  </Function>

  <Function Name="removeMatrix2">
    <Arguments>r:n</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rgb2digi">
    <Arguments>nnnn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="weapon">
    <Arguments>e:</Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the weapon that player E is currently holding]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>qn</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=rnv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vec2">
    <Arguments>xv4</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matchFirst">
    <Arguments>s:s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="quat">
    <Arguments>e</Arguments>
    <Return>q</Return>
    <Description><![CDATA[Converts angle of E to a quaternion]]></Description>
  </Function>

  <Function Name="column">
    <Arguments>xm4:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>q=ts</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerDefaultZero">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[If given any value other than 0 it will default the distance data to zero when nothing is hit]]></Description>
  </Function>

  <Function Name="signalClk">
    <Arguments>s</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the chip was executed because the signal S was sent, regardless of group or scope. Returns 0 otherwise.]]></Description>
  </Function>

  <Function Name="bAnd">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>r=xwls</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findDisallowEntities">
    <Arguments>r</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove all entities from R from the whitelist]]></Description>
  </Function>

  <Function Name="health">
    <Arguments>e:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Gets the health of the entity]]></Description>
  </Function>

  <Function Name="eyeTrace">
    <Arguments>e:</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Equivalent to rangerOffset(16384, E:shootPos(), E:eye()), but faster (causing less lag)]]></Description>
  </Function>

  <Function Name="gDeleteAllStr">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix">
    <Arguments></Arguments>
    <Return>m</Return>
    <Description><![CDATA[Creates a 3x3 zero matrix]]></Description>
  </Function>

  <Function Name="findDisallowPlayer">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove this player from the entity whitelist]]></Description>
  </Function>

  <Function Name="lastSpoke">
    <Arguments></Arguments>
    <Return>e</Return>
    <Description><![CDATA[Returns the last player to speak.]]></Description>
  </Function>

  <Function Name="setRoll">
    <Arguments>a:n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Returns a copy of the angle with Roll replaced (use as Ang = Ang:setRoll(...)) ]]></Description>
  </Function>

  <Function Name="writeString">
    <Arguments>xwl:snnv</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="ranger">
    <Arguments>xwl:s</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertAngle">
    <Arguments>r:na</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="npcGoWalk">
    <Arguments>e:v</Arguments>
    <Return></Return>
    <Description><![CDATA[Tells the NPC to walk to position V]]></Description>
  </Function>

  <Function Name="egpLine">
    <Arguments>xwl:nxv2xv2vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>a</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpSetFont">
    <Arguments>xwl:nsn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpClear">
    <Arguments>xwl:</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>vv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:is">
    <Arguments>r</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removeAngle">
    <Arguments>r:n</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findInSphere">
    <Arguments>vn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Finds entities in a sphere around V with a radius of N, returns the number found after filtering]]></Description>
  </Function>

  <Function Name="insertMatrix2">
    <Arguments>r:nxm2</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="x">
    <Arguments>xv4:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerOffsetHull">
    <Arguments>nvvvv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[Inputs: Distance, StartPos, Direction, Hull MinSize, Hull MaxSize]]></Description>
  </Function>

  <Function Name="duped">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if the expression was duplicated]]></Description>
  </Function>

  <Function Name="unshiftVector">
    <Arguments>r:v</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>m</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gGetEnt">
    <Arguments>s</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="cos">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the cosine of C]]></Description>
  </Function>

  <Function Name="setAngle">
    <Arguments>r:na</Arguments>
    <Return>a</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="teamPlayers">
    <Arguments>n:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:div">
    <Arguments>nv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="insertString">
    <Arguments>r:ns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findClearWhiteList">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Clear all entries from the entire whitelist]]></Description>
  </Function>

  <Function Name="boxSize">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the dimensions of the entity's bounding box as a vector (length, width, height)]]></Description>
  </Function>

  <Function Name="setRanger">
    <Arguments>t:sxrd</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setMatrix">
    <Arguments>t:sm</Arguments>
    <Return>m</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerReset">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[Resets all ranger flags and filters.]]></Description>
  </Function>

  <Function Name="typeids">
    <Arguments>t:</Arguments>
    <Return>r</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="element">
    <Arguments>xm4:nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>n=tsn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>v</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gSetStr">
    <Arguments>ss</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xm2=rnxm2</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>xv4=xwlsxv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="findIncludePlayer">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[Include this player in future finds, and remove other entities not in the entity whitelist]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>xv2</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="inertia">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Gets the principal components of the entity's inertia tensor in the form ( Ixx, Iyy, Izz )]]></Description>
  </Function>

  <Function Name="clk">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="egpPos">
    <Arguments>xwl:nnn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="rangerAngleHull">
    <Arguments>nnnv</Arguments>
    <Return>xrd</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="bone">
    <Arguments>r:n</Arguments>
    <Return>b</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="round">
    <Arguments>an</Arguments>
    <Return>a</Return>
    <Description><![CDATA[Rounds PYR to argument 2's decimal precision]]></Description>
  </Function>

  <Function Name="csch">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the hyperbolic cosecant of C]]></Description>
  </Function>

  <Function Name="gGetVec">
    <Arguments>n</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="dehomogenized">
    <Arguments>v:</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[Converts a 2D homogeneous vector (x,y,w) into a 2D cartesian vector]]></Description>
  </Function>

  <Function Name="findAllowPlayer">
    <Arguments>s</Arguments>
    <Return></Return>
    <Description><![CDATA[Remove this player from the entity blacklist]]></Description>
  </Function>

  <Function Name="findExcludeEntities">
    <Arguments>r</Arguments>
    <Return></Return>
    <Description><![CDATA[Exclude all entities from R from future finds]]></Description>
  </Function>

  <Function Name="trimRight">
    <Arguments>s:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Trims away spaces at the end of a string]]></Description>
  </Function>

  <Function Name="teamDeaths">
    <Arguments>n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="identity">
    <Arguments></Arguments>
    <Return>m</Return>
    <Description><![CDATA[Creates a 3x3 identity matrix]]></Description>
  </Function>

  <Function Name="op:ass">
    <Arguments>xv4</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removeVector4">
    <Arguments>r:n</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setX">
    <Arguments>xv2:n</Arguments>
    <Return>xv2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setEntity">
    <Arguments>t:se</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setEntity">
    <Arguments>xwl:se</Arguments>
    <Return>e</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="removing">
    <Arguments></Arguments>
    <Return>n</Return>
    <Description><![CDATA[Returns 1 if this is the last() execution and caused by the entity being removed.]]></Description>
  </Function>

  <Function Name="sec">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the secant of C]]></Description>
  </Function>

  <Function Name="findClipFromSphere">
    <Arguments>vn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[Filters the list of entities by removing all entities within the specified sphere (center, radius)]]></Description>
  </Function>

  <Function Name="setColumn">
    <Arguments>m:nnnn</Arguments>
    <Return>m</Return>
    <Description><![CDATA[Sets the values of a column. The first argument given specifies the column(i), the following arguments are the values i1, i2, i3]]></Description>
  </Function>

  <Function Name="glonError">
    <Arguments></Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="setColor">
    <Arguments>e:vn</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:idx">
    <Arguments>v=xwlnv</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="convar">
    <Arguments>s</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Give a console command such as "name" and it returns the set value]]></Description>
  </Function>

  <Function Name="setColumn">
    <Arguments>xm4:nnnnn</Arguments>
    <Return>xm4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteVec">
    <Arguments>s</Arguments>
    <Return>v</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="randvec">
    <Arguments></Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns a uniformly distributed, random, normalized direction vector.]]></Description>
  </Function>

  <Function Name="runOnList">
    <Arguments>n</Arguments>
    <Return></Return>
    <Description><![CDATA[Makes the expression execute when the list has finished uploading to the server.]]></Description>
  </Function>

  <Function Name="gSetEnt">
    <Arguments>e</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="angVelVector">
    <Arguments>e:</Arguments>
    <Return>v</Return>
    <Description><![CDATA[Returns rotation axis, velocity and direction given as the vector's direction, magnitude and sense]]></Description>
  </Function>

  <Function Name="gSetAng">
    <Arguments>a</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="gDeleteAllNum">
    <Arguments></Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="readCell">
    <Arguments>xwl:n</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="log10">
    <Arguments>c</Arguments>
    <Return>c</Return>
    <Description><![CDATA[Calculates the logarithm of C to base 10]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nq...</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="max">
    <Arguments>r:</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="readLine">
    <Arguments>n:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="soundPlay">
    <Arguments>e:nns</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="primaryAmmoType">
    <Arguments>e:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[Returns the type of primary ammo of weapon E as a number in a string]]></Description>
  </Function>

  <Function Name="bShl">
    <Arguments>nn</Arguments>
    <Return>n</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="op:neg">
    <Arguments>q</Arguments>
    <Return>q</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="matrix2">
    <Arguments>r:n</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="toString">
    <Arguments>q:</Arguments>
    <Return>s</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="pushNumber">
    <Arguments>r:n</Arguments>
    <Return></Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="vector4">
    <Arguments>xwl:s</Arguments>
    <Return>xv4</Return>
    <Description><![CDATA[]]></Description>
  </Function>

  <Function Name="select">
    <Arguments>nxm2...</Arguments>
    <Return>xm2</Return>
    <Description><![CDATA[]]></Description>
  </Function>
</FunctionList>